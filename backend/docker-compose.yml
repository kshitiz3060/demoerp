
version: "3.8"
services:
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  redis:
    image: redis:7
    ports:
      - "6379:6379"

  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"

  api_gateway:
    build: ./api_gateway
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    ports:
      - "8000:8000"
    depends_on:
      - auth_service
      - student_service

  auth_service:
    build: ./auth_service
    command: uvicorn main:app --host 0.0.0.0 --port 8001 --reload
    ports:
      - "8001:8001"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=db
      - JWT_SECRET=${JWT_SECRET}

  student_service:
    build: ./student_service
    command: uvicorn main:app --host 0.0.0.0 --port 8002 --reload
    ports:
      - "8002:8002"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=db
      - JWT_SECRET=${JWT_SECRET}

  academic_service:
    build: ./academic_service
    command: uvicorn main:app --host 0.0.0.0 --port 8003 --reload
    ports:
      - "8003:8003"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=db
      - JWT_SECRET=${JWT_SECRET}

  exam_service:
    build: ./exam_service
    command: uvicorn main:app --host 0.0.0.0 --port 8004 --reload
    ports:
      - "8004:8004"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=db
      - JWT_SECRET=${JWT_SECRET}

volumes:
  pgdata:
